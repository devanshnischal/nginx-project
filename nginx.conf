# In this file, the actual commands or instructions are called directives
# And the enclosed blocks are called contexts

worker_processes auto; 
# controls how many parallel processes NGinx spawns to handle client requests --> Simply they are used to process the incoming request --> more the worker processes more the processing --> in Prod --> the number of worker processes is kept equal to the CPU cores of the server on which Nginx is configured --> we can use worker_processes auto; to let nginx decide 
# So if your machine has 4 CPU cores, worker_processes auto; will start 4 NGINX workers.

events {
    worker_connections 1024; # it means how many connections can each worker process handle
}

# This is called server block --> Defines how nginx should handle requests for a particular domain or IP address
# Basically it means --> How nginx will listen for connections, How to route the requests

# Upstream block --> refers to the backend servers that nginx forwards request to
# Downstream servers --> traffic going back to the client

http {

    include mime.types; # to be included in the response header so that browser can easily understand the response

    upstream nodejs_cluster { # here name of the upstream server is nodejs_cluster
        least_conn; # changing round robin to least connections LB algo
        server 127.0.0.1:3001; # giving local address and port
        server 127.0.0.1:3002;
        server 127.0.0.1:3003;
    }

    server {
        listen 8080; # The IP address and the port on which the server accepts the requests or nginx is running on port 8080 of the localhost
        server_name localhost;

        location / { # '/' is root URL, will apply to all requests unless more specific location blocks are defined 
            proxy_pass http://nodejs_cluster; # proxy server forwards the request to the upstream
            proxy_set_header Host $host;
        }   
    }
}

# For https configuration
# http {

#     include mime.types; # to be included in the response header so that browser can easily understand the response

#     upstream nodejs_cluster { # here name of the upstream server is nodejs_cluster
#         least_conn; # changing round robin to least connections LB algo
#         server 127.0.0.1:3001; # giving local address and port
#         server 127.0.0.1:3002;
#         server 127.0.0.1:3003;
#     }

#     server {
#         listen 443 ssl; # The IP address and the port on which the server accepts the requests or nginx is running on port 8080 of the localhost
#         server_name localhost;

#         ssl_certificate <ssl-cert-path>;
#         ssl_certificate_key <ssl-private-key-path>;

#         location / { # '/' is root URL, will apply to all requests unless more specific location blocks are defined 
#             proxy_pass http://nodejs_cluster; # proxy server forwards the request to the upstream
#             proxy_set_header Host $host;
#         }   
#     }

#     server {
#         listen 80;
#         server_name localhost;
#         location / {
#             return 301 https://$host$request_uri;
#         }
#     }
# }